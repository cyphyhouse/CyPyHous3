#!/usr/bin/env python3
import argparse

from src.config.config_funcs import get_configs


def get_opt_args():
    parser = argparse.ArgumentParser()
    group = parser.add_argument_group()
    group.add_argument('-a', '--app', action='store')
    group.add_argument('-c', '--config', action='store')
    args = parser.parse_args()
    appfile = args.app
    configfile = args.config
    return (appfile, configfile)


def get_app_name(appfile):
    appcode = open(appfile).read()
    end = appcode.find("(AgentThread)")
    begin = appcode[:end].rfind("class ") + 6
    appname = appcode[begin:end].strip()
    return appname


def import_app(appfile, appname):
    from importlib import machinery
    loader = machinery.SourceFileLoader(appname, appfile)
    mod = loader.load_module()
    app = getattr(mod, appname)
    return app


def run_app(appfile, configfile):
    appname = get_app_name(appfile)
    app = import_app(appfile, appname)
    ac, mc = get_configs(configfile)
    app(ac, mc)


if __name__ == '__main__':
    appfile = None
    configfile = None
    try:
        appfile = get_opt_args()[0]
        configfile = get_opt_args()[1]
        run_app(appfile, configfile)
    except IndexError:
        print("invalid app and config input. Use -h for help")
    if appfile is None or configfile is None:
        print("invalid app and config input. Use -h for help")
